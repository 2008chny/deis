
Find an application youâ€™d like to deploy, or clone `an example app`_.
Change into the application directory and use  ``deis create --formation=dev``
to create a new application attached to the dev formation.

.. code-block:: console

    $ deis create --formation=dev
    Creating application... done, created peachy-waxworks
    Git remote deis added

To deploy the application, use ``git push deis master``.
Deis will automatically deploy Docker containers and configure Nginx proxies
to route requests to your application.

.. code-block:: console

    $ git push deis master
    Counting objects: 146, done.
    Delta compression using up to 8 threads.
    Compressing objects: 100% (122/122), done.
    Writing objects: 100% (146/146), 21.54 KiB, done.
    Total 146 (delta 84), reused 47 (delta 22)
           Node.js app detected
    -----> Resolving engine versions
           Using Node.js version: 0.10.17
           Using npm version: 1.2.30
    ...

    -----> Compiled slug size: 4.7 MB
           Launching... done, v2

    -----> peachy-waxworks deployed to Deis
           http://peachy-waxworks.example.com ...

    $ curl -s http://peachy-waxworks.example.com
    Powered by Deis!

Once your application is deployed, use ``deis scale web=4`` to
scale up Docker web containers to 4, for example.  You can also use
``deis logs`` to view aggregated application logs, or ``deis run`` to run admin
commands inside your application.

.. code-block:: console

    $ deis scale web=4
    Scaling containers... but first, coffee!
    done in 12s

    === peachy-waxworks Containers

    --- web: `node server.js`
    web.1 up 2013-09-23T19:02:30.745Z (dev-runtime-1)
    web.2 up 2013-09-23T19:36:48.741Z (dev-runtime-1)
    web.3 up 2013-09-23T19:36:48.758Z (dev-runtime-1)
    web.4 up 2013-09-23T19:36:48.771Z (dev-runtime-1)

To learn more, use ``deis help`` or browse the rest of `the documentation`_.

.. _`an example app`: https://github.com/opdemand/example-nodejs-express
.. _`the documentation`: http://docs.deis.io/
