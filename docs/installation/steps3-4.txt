Once the provisioning script finishes, a **deis-controller** client object will
have been created on the Chef server. You must log in to the Opscode web portal
(or its equivalent if you're using a local Chef server) and add
**deis-controller** to the ``admins`` group. This is required so the controller
can add and delete node and client records when scaling nodes.

This is also the point at which you should set up name resolution for the Deis
controller, unless you prefer to access it by IP address. So from here, we will
refer to 198.51.100.22 as "deis.example.com."

Congratulations! You've set up a Deis controller, the heart of your new private
PaaS. Now let's connect to the controller and set it to work.

4. Install the Deis Client
--------------------------

Install the Deis client with `pip`_:

.. code-block:: console

    $ pip install deis
    Downloading/unpacking deis
      Downloading deis-0.1.1.tar.gz
      Running setup.py egg_info for package deis
    ...
    Successfully installed deis
    Cleaning up...

.. _`pip`: http://www.pip-installer.org/en/latest/installing.html
.. _`standard environment variables`: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/SettingUp_CommandLine.html#set_aws_credentials_linux

